#!/bin/bash

# Определяем цвета текста
WHITE="\033[1;37m"
RESET="\033[0m"
GREEN="\033[1;32m"
CYAN="\033[1;36m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
RED="\033[1;31m"
MAGENTA="\033[1;35m"

# Логотип
logo() {
    echo -e "  ##  ###  #######  ######   #######  #######  #######  ######   #######  ##  ##   #######  ###### "
    echo -e "  ### ###  ##   ##  ##  ##   ##       ##         ###    ##  ##     ###    ##  ##   ##       ##  ## "
    echo -e "  #######  ##   ##  ##  ##   ##       #######    ###    ##  ##     ###    ## ##    ##       ##  ## "
    echo -e "  ## ####  ##  ###  ### ###  #######       ##    ###    #######    ###    #######  #######  ####### "
    echo -e "  ##  ###  ##  ###  ### ###  ###      ###  ##    ###    ### ###    ###    ##  ###  ###      ### ### "
    echo -e "  ##  ###  ##  ###  ### ###  # #      ###  ##    ###    ### ###    ###    ##  ###  # #      ### ### "
    echo -e "  ##  ###  #######  #######  #######  #######    ###    ### ###  #######  ##  ###  #######  ### ### ${RESET}"
}

# Функция установки ноды
install_node() {
    echo -e "${CYAN}Начинается установка ноды... 🌱${RESET}"

    # Обновление системы и установка необходимых пакетов
    sudo apt update && sudo apt install -y curl git make jq build-essential gcc unzip wget lz4 aria2 tmux

    # Установка Dria Launcher (если ещё не установлен)
    if [ ! -f "/usr/local/bin/dria-launcher" ]; then
        echo -e "${YELLOW}Скачивание и установка Dria Launcher... 🚀${RESET}"
        curl -fsSL https://dria.co/launcher | bash
    else
        echo -e "${GREEN}Dria Launcher уже установлен. ✅${RESET}"
    fi

    # Установка Ollama (если ещё не установлен)
    if [ ! -f "/usr/local/bin/ollama" ]; then
        echo -e "${YELLOW}Скачивание и установка Ollama... 💻${RESET}"
        curl -fsSL https://ollama.com/install.sh | sh
    else
        echo -e "${GREEN}Ollama уже установлен. ✅${RESET}"
    fi

    # Запуск tmux-сессии с командой запуска ноды
    echo -e "${CYAN}Запуск tmux-сессии для старта ноды... 🖥️${RESET}"

    # Проверка, существует ли сессия tmux с именем 'dria_node'
    tmux has-session -t dria_node 2>/dev/null

    if [ $? != 0 ]; then
        # Если не существует — создаём
        tmux new-session -d -s dria_node
        tmux send-keys -t dria_node 'dkn-compute-launcher start' C-m
        echo -e "${GREEN}Нода успешно запущена в новой tmux-сессии. 🎉${RESET}"
    else
        # Если уже есть — отправляем команду в неё
        tmux send-keys -t dria_node 'dkn-compute-launcher start' C-m
        echo -e "${CYAN}Tmux-сессия 'dria_node' уже существует. Команда отправлена. 🔄${RESET}"
    fi

    # Присоединение к tmux-сессии
    tmux attach -t dria_node

    read -p "Нажмите Enter, чтобы вернуться в меню..." dummy
    show_menu
}

# Проверка $DRIA баллов
check_points() {
    echo -e "${CYAN}Проверка баланса $DRIA... 💰${RESET}"
    dkn-compute-launcher points
    read -p "Нажмите Enter, чтобы вернуться в меню..." dummy
    show_menu
}

# Ручное обновление
update_manually() {
    echo -e "${YELLOW}Начинается ручное обновление... 🔄${RESET}"
    dkn-compute-launcher update
    read -p "Нажмите Enter, чтобы вернуться в меню..." dummy
    show_menu
}

# Удаление ноды
uninstall_node() {
    echo -e "${RED}Вы уверены, что хотите удалить ноду? Это действие необратимо! 🗑️${RESET}"
    read -p "Введите 'yes' для подтверждения: " confirm
    if [ "$confirm" != "yes" ]; then
        echo -e "${YELLOW}Удаление отменено. 🚫${RESET}"
        return
    fi

    # Остановка ноды, если она запущена
    tmux has-session -t dria_node 2>/dev/null
    if [ $? == 0 ]; then
        echo -e "${CYAN}Остановка ноды перед удалением... ⏹️${RESET}"
        tmux send-keys -t dria_node 'exit' C-m
        tmux kill-session -t dria_node
        echo -e "${GREEN}Нода успешно остановлена. 🛑${RESET}"
    else
        echo -e "${YELLOW}Активная сессия ноды не найдена. Продолжаем удаление. ⚡${RESET}"
    fi

    # Удаление ноды
    echo -e "${RED}Удаление ноды... 🗑️${RESET}"
    dkn-compute-launcher uninstall

    # Очистка оставшихся файлов
    echo -e "${CYAN}Очистка остаточных файлов... 🧹${RESET}"
    sudo rm -rf /usr/local/bin/dria-launcher
    sudo rm -rf /usr/local/bin/ollama
    sudo rm -rf .dria

    echo -e "${GREEN}Нода успешно удалена и система очищена. 🎉${RESET}"
    read -p "Нажмите Enter, чтобы вернуться в меню..." dummy
    show_menu
}

# Просмотр логов
view_logs() {
    echo -e "${BLUE}Подключение к tmux-сессии для просмотра логов... 📜${RESET}"
    tmux attach -t dria_node
    read -p "Нажмите Enter, чтобы вернуться в меню..." dummy
    show_menu
}

# Главное меню
show_menu() {
    clear
    logo  # Логотип

    # Меню
    echo -e "\n${WHITE}╔═══════════════════════════════╗${RESET}"
    echo -e "${WHITE}║        МЕНЮ УПРАВЛЕНИЯ        ║${RESET}"
    echo -e "${WHITE}╚═══════════════════════════════╝${RESET}\n"

    echo -e "${MAGENTA}=====================================${RESET}"
    echo "Выберите действие:"
    echo -e "${YELLOW}1. Установить ноду 🌱${RESET}"
    echo -e "${GREEN}2. Проверить $DRIA баллы 💰${RESET}"
    echo -e "${CYAN}3. Обновить вручную 🔄${RESET}"
    echo -e "${RED}4. Удалить ноду 🗑️${RESET}"
    echo -e "${BLUE}5. Посмотреть логи 📜${RESET}"
    echo -e "${MAGENTA}6. Выход 🚪${RESET}"
    echo -e "${MAGENTA}=====================================${RESET}"
    read -p "Выберите пункт [1-6]: " choice
    case $choice in
        1) install_node ;;
        2) check_points ;;
        3) update_manually ;;
        4) uninstall_node ;;
        5) view_logs ;;
        6) exit 0 ;;
        *) echo -e "${RED}Неверный пункт, попробуйте снова. ❌${RESET}"; sleep 2; show_menu ;;
    esac
}

# Запуск с главного меню
show_menu
